nextflow_pipeline {

    name "Test pipeline: NFCORE_MAG"
    script "main.nf"
    tag "pipeline"
    tag "nfcore_mag"
    tag "nfcore_mag_test_virus_identification"

    test("Parameters: run_virus_identification = true") {
        when {
            params {
                outdir                      = "$outputDir"
                input                       = 'https://raw.githubusercontent.com/nf-core/test-datasets/mag/samplesheets/samplesheet.multirun.csv'
                run_virus_identification    = true
                genomad_splits              = 7
                reads_minlength             = 150
                megahit_fix_cpu_1           = true
                centrifuge_db               = null
                kraken2_db                  = null
                keep_phix                   = true
                skip_clipping               = true
                coassemble_group            = true
                skip_gtdbtk                 = true
                skip_binning                = true
                skip_prokka                 = true
                skip_spades                 = true
                skip_spadeshybrid           = true
                skip_quast                  = true
                skip_prodigal               = true
                skip_krona                  = true
                skip_adapter_trimming       = true
                skip_metabat2               = true
                skip_maxbin2                = true
                skip_busco                  = true
            }
        }

        then {
            assertAll(
                { assert workflow.success },
                { assert snapshot(
                    path("${params.outdir}/Assembly/MEGAHIT/MEGAHIT-group-0.contigs.fa.gz"),
                    path("${params.outdir}/multiqc/multiqc_data/multiqc_fastqc.yaml"),
                    path("${params.outdir}/VirusIdentification/")
                ).match() },
                { assert new File("$outputDir/multiqc/multiqc_report.html").exists() }
            )
        }
    }
}
