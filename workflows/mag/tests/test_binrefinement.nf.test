nextflow_workflow {

    name "Test workflow: MAG"
    script "../main.nf"
    workflow "MAG"
    tag "workflows"
    tag "mag"
    tag "mag_test_binrefinement"

    test("Parameters: refine_bins_dastool = true") {

        when {
            params {
                input                           = 'https://raw.githubusercontent.com/nf-core/test-datasets/mag/samplesheets/samplesheet.csv'
                assembly_input                  = 'https://raw.githubusercontent.com/nf-core/test-datasets/mag/samplesheets/assembly_samplesheet.csv'
                bbnorm                          = true
                keep_phix                       = true
                skip_adapter_trimming           = true
                centrifuge_db                   = null
                kraken2_db                      = null
                skip_krona                      = true
                skip_quast                      = true
                skip_prodigal                   = true
                bowtie2_fix_cpu_1               = true
                metabat2_fix_cpu_1              = true
                maxbin2_fix_cpu_1               = true
                concoct_fix_cpu_1               = true
                binning_map_mode                = 'own'
                min_length_unbinned_contigs     = 1
                max_unbinned_contigs            = 2
                refine_bins_dastool             = true
                refine_bins_dastool_threshold   = 0
                // TODO not using 'both' until   #489 merged
                postbinning_input               = 'refined_bins_only'
                skip_busco                      = true
                skip_binqc                      = true
                skip_gtdbtk                     = true
                skip_prokka                     = true
                skip_metaeuk                    = true
            }
        }

        then {
            assertAll(
                { assert workflow.success },
                { assert snapshot(
                    workflow.out
                ).match() }
            )
        }
    }
}
